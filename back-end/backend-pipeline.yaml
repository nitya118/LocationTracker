trigger:
  branches:
    include:
      - infra_*
  paths:
    include:
      -  '*'

  
# backend pipleine
steps:
- task: Docker@2
  displayName: Build an image
  inputs:
    command: build
    dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
    buildContext: '$(Build.SourcesDirectory)'
    repository: $(DOCKER_REPOSITORY_NAME)

- task: ECRPushImage@1
  inputs:
    awsCredentials: 'AWS_credentials'
    regionName: $(AWS_REGION)
    imageSource: 'imagename'
    sourceImageName: $(DOCKER_REPOSITORY_NAME)
    sourceImageTag: $(Build.BuildId)
    pushTag: latest
    repositoryName: $(DOCKER_REPOSITORY_NAME)

- task: TerraformCLI@1
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/backend/terraform/env/dev'
    backendType: 'selfConfigured'
    allowTelemetryCollection: true

- task: TerraformCLI@1
  inputs:
    command: 'validate'
    workingDirectory: '$(System.DefaultWorkingDirectory)/backend/terraform/env/dev'
    allowTelemetryCollection: true

- task: TerraformCLI@1
  inputs:
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/backend/terraform/env/dev'
    allowTelemetryCollection: true
    providerServiceAws: 'AWS_credentials'
    providerGoogleRegion: 'eu-west-1'

- task: TerraformCLI@1
  inputs:
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/backend/terraform/env/dev'
    allowTelemetryCollection: true
    providerServiceAws: 'AWS_credentials'
    providerGoogleRegion: 'eu-west-1'